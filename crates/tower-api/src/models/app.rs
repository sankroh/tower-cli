/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: development
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct App {
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "last_run_at")]
    pub last_run_at: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "owner")]
    pub owner: String,
    #[serde(rename = "schedule")]
    pub schedule: String,
    #[serde(rename = "short_description")]
    pub short_description: String,
    #[serde(rename = "version")]
    pub version: String,
}

impl App {
    pub fn new(created_at: String, last_run_at: String, name: String, owner: String, schedule: String, short_description: String, version: String) -> App {
        App {
            created_at,
            last_run_at,
            name,
            owner,
            schedule,
            short_description,
            version,
        }
    }
}

